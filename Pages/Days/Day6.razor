@page "/day-6"
@using System.Diagnostics

@inject ISnackbar Snackbar

<MudPaper Width="100%" Class="mx-2 pa-2" Outlined="false" Square="true" Elevation="0">

	<MudText Typo="Typo.h4" GutterBottom="true">Day 6: Lanternfish</MudText>

	<MudText Typo="@Typo.body1" GutterBottom="true"><b>Puzzle Answer:</b> @Puzzle.SolutionA</MudText>

	<MudText Typo="Typo.body1" GutterBottom="true">--- Part Two ---</MudText>

	<MudText Typo="@Typo.body1" GutterBottom="true"><b>Puzzle Answer:</b> @Puzzle.SolutionB</MudText>

	<MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="@UpdatePuzzle">Update Puzzle</MudButton>
</MudPaper>

@code {
	private Puzzle Puzzle { get; set; } = new();

	private Dictionary<int, long> LanternFish { get; set; } = new();

	protected override void OnAfterRender(bool firstRender)
	{
		if (firstRender)
		{
			Puzzle = Utilities.GetPuzzleInput("Day6");

			LanternFish = Puzzle.Input.Split(',').Select(int.Parse).GroupBy(x => x).ToDictionary(grp => grp.Key, grp => (long)grp.Count());
			GetSumOfLanternFish();
			GetSumOfLanternFishGodMode();

			StateHasChanged();
		}

	}

	private void GetSumOfLanternFish()
	{
		for (var i = 0; i < 80; i++) LanternFish = SpawnCycle(LanternFish);

		Puzzle.SolutionA = LanternFish.Values.Sum().ToString();
	}

	private void GetSumOfLanternFishGodMode()
	{
		for (var i = 80; i < 256; i++) LanternFish = SpawnCycle(LanternFish);
		Puzzle.SolutionB = LanternFish.Values.Sum().ToString();
	}


	private static Dictionary<int, long> SpawnCycle(Dictionary<int, long> lanternFish) => new()
	{
		[8] = lanternFish.GetValueOrDefault(0),
		[7] = lanternFish.GetValueOrDefault(8),
		[6] = lanternFish.GetValueOrDefault(0) + lanternFish.GetValueOrDefault(7),
		[5] = lanternFish.GetValueOrDefault(6),
		[4] = lanternFish.GetValueOrDefault(5),
		[3] = lanternFish.GetValueOrDefault(4),
		[2] = lanternFish.GetValueOrDefault(3),
		[1] = lanternFish.GetValueOrDefault(2),
		[0] = lanternFish.GetValueOrDefault(1)
	};


	private async Task UpdatePuzzle()
	{
		await Utilities.UpdatePuzzleFile(Puzzle);
		Snackbar.Add("Puzzle JSON updated!", Severity.Success);
	}

}
