@page "/day-1"


<h3>DayOne</h3>
<p>@Count</p>
<p>@SlidingCount</p>
@code {

	private Puzzle Puzzle { get; set; } = new();
	private int Count { get; set; }
	private int SlidingCount { get; set; }
	protected override void OnAfterRender(bool firstRender)
	{

		if (firstRender)
		{
			Puzzle = Utilities.GetPuzzleInput("Day1");

			var depths = Puzzle.Input.Split('\n', StringSplitOptions.RemoveEmptyEntries).Select(d => Int32.Parse(d)).ToList();
			Count = GetDepthIncreases(depths);
			SlidingCount = GetSlidingWindowIncreases(depths);

			StateHasChanged();
		}

	}

	private int GetDepthIncreases(List<int> depths)
	{
		var increaseCount = 0;
		for (var i = 0; i < depths.Count; i++)
		{
			var depth = depths[i];
			if (i != 0)
			{
				var prev = depths[i - 1];
				if (depth > prev) increaseCount++;
			}
		}

		return increaseCount;
	}

	private int GetSlidingWindowIncreases(List<int> depths)
	{
		var increaseCount = 0;
		for(var i = 0; i < depths.Count; i++)
		{
			var setA = depths.Skip(i).Take(3).ToArray();
			var setB = depths.Skip(i + 1).Take(3).ToArray();
			if(setA.Length == 3 && setB.Length == 3)
			{
				if (setB.Sum() > setA.Sum()) increaseCount++;
			}

		}
		return increaseCount;
	}

}
